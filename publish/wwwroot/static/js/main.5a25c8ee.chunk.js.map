{"version":3,"sources":["theme/theme.js","componentes/Tool/Style.js","servicios/HttpCliente.js","actions/UsuarioActions.js","contexto/store.js","componentes/seguridad/RegistrarUsuario.js","assets/img/YouLEAD.jpg","componentes/seguridad/Login.js","logo.svg","componentes/seguridad/PerfilUsuario.js","actions/ImageAction.js","componentes/navegacion/bar/menuIzquierda.js","componentes/navegacion/bar/menuDerecha.js","componentes/navegacion/bar/BarSesion.js","componentes/navegacion/AppNavbar.js","componentes/navegacion/RutaSegura.js","actions/InstructorAction.js","componentes/instructores/NuevoInstructor.js","componentes/Tool/ControlTyping.js","componentes/instructores/ExportToExcel.js","componentes/instructores/PaginadorInstructor.js","actions/AlumnoAction.js","componentes/alumnos/ExportExcel.js","componentes/alumnos/PaginadorAlumno.js","componentes/alumnos/NuevoAlumno.js","componentes/seguridad/LoginNya.js","componentes/seguridad/Home.js","componentes/alumnos/PaginadorLista.js","App.js","serviceWorker.js","contexto/initialState.js","contexto/reducers/sesionUsuarioReducer.js","contexto/reducers/openSnackbarReducer.js","index.js","contexto/reducers/index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","style","paper","marginTop","display","flexDirection","alignItems","backgroundColor","form","width","submit","avatar","margin","height","icon","fontSize","axios","defaults","baseURL","interceptors","request","use","config","token_seguridad","window","localStorage","getItem","headers","Authorization","error","Promise","reject","requestGenerico","get","url","post","body","put","delete","instancia","create","CancelToken","isCancel","loginUsuario","usuario","dispatch","resolve","eject","then","response","data","imagenPerfil","fotoPerfil","nuevoFile","extension","type","sesion","autenticado","catch","guardarUsuario","a","promesaInstructor","all","map","p","e","editarUser","promesaUsuario","eliminarUsuario","endPointAlumno","id","promesaAlumno","HttpCliente","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Copyright","useStyles","Typography","variant","color","align","Date","getFullYear","makeStyles","spacing","list","RegistrarUsuario","classes","sesionUsuario","useState","setUsuarioResponse","useEffect","usuarios","console","log","datos","userName","obtenerListaUsuarios","nombreCompleto","email","password","setUsuario","ingresarValoresMemoria","target","name","anterior","resetearForm","modalEditar","setModalEditar","modalEliminar","setModalEliminar","UserName","usuarioSeleccionado","setUsuarioSeleccionado","handleChange","seleccionarPais","user","caso","editUsuario","respuestas","mensaje","status","openMensaje","open","className","Card","root","background","CardContent","Grid","container","item","xs","md","TextField","onChange","fullWidth","label","justify","Box","mt","Button","size","startIcon","onClick","preventDefault","scope","class","Modal","isOpen","ModalHeader","ModalBody","readOnly","ModalFooter","withRouter","props","usuarioSesion","Email","Password","Container","maxWidth","component","src","descarga","alt","token","setItem","history","push","PerfilUsuario","confirmarPassword","fotoUrl","fotoKey","uuidv4","Avatar","reactFoto","InputProps","withIcon","singleImage","buttonText","imagenes","imagen","foto","URL","createObjectURL","nombre","split","pop","lector","FileReader","readAsDataURL","onload","result","onerror","PromiseRejectionEvent","respuesta","imgExtension","maxFileSize","actualizarUsuario","Object","keys","errors","MenuIzquierda","List","ListItem","Link","button","to","ListItemText","listItemText","Divider","MenuDerecha","salirSesion","FotoUsuarioTemp","seccionDesktop","breakpoints","up","seccionMobile","grow","flexGrow","avatarSize","fontWeight","paddingLeft","abrirMenuIzquierda","setAbrirMenuIzquierda","abrirMenuDerecha","setAbrirMenuDerecha","cerrarMenuDerecha","salirSesionApp","removeItem","nuevoUsuario","isDropdownvVisible","toogleDropdownVisibility","Fragment","Drawer","onClose","anchor","payload","temp","atob","nya","JSON","parse","role","rol","onKeyDown","Toolbar","IconButton","AppNavbar","AppBar","position","RutaSegura","Component","rest","render","guardarInstructor","instructor","promesaImagen","paginacionInstructor","paginador","editarInstructor","InstructorId","eliminarInstructor","instructorId","pdfInstructor","NuevoInstructor","minWidth","bullet","transform","title","pos","marginBottom","setFechaSeleccionada","Nombre","Apellidos","TelefonoM","CentroAprendizaje","CantAlumnos","Categoria","UplineMaster","ClaveInstructor","ClaveUpline","setInstructor","select","helperText","option","MenuItem","objetoInstructor","parseInt","responseInstructor","ControlTyping","texto","delay","textoValor","setTextoValor","manejador","setTimeout","clearTimeout","ExportToExcel","apiData","fileName","extendedIcon","marginRight","Fab","aria-label","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","lista","PaginadorInstructor","StyledTableCell","withStyles","head","common","white","TableCell","textoBusquedaInstructor","setTextoBusquedaInstructor","typingBuscadorTexto","titulo","numeroPagina","cantidadElementos","paginadorRequest","setPaginadorRequest","listaRecords","totalRecords","numeroPaginas","paginadorResponse","setPaginadorResponse","nombreVariant","paginaVariant","objetoPaginadorRequest","listaNueva","i","alumnos","obtenerListaInstructor","modalLista","setModalLista","instructorSeleccionado","setInstructorSeleccionado","seleccionarInstructor","padding","paddingTop","paddingBottom","sm","TableContainer","Paper","Table","TableHead","TableRow","Hidden","mdDown","TableBody","apellidos","telefonoM","centroAprendizaje","cantAlumnos","categoria","claveInstructor","uplineMaster","claveUpline","caso1","selectInstructor","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","event","nuevaPagina","onChangeRowsPerPage","labelRowsPerPage","alumno","alumnoId","nombreAlumno","escuelaProcedencia","guardarAlumno","paginacionAlumno","editarAlumno","AlumnoId","eliminarAlumno","pdfAlumno","ExportExcel","PaginadorAlumno","textoBusquedaAlumno","setTextoBusquedaAlumno","NombreAlumno","ApellidosAlumno","FechaNacimiento","Edad","Telefono","Sexo","EmailAlumno","EscuelaProcedencia","GradoEstudio","ExamenValorativo","FechaExamen","LugarExamen","MetaInicio","CursoEspecial","NivelInscrito","Libro","FechaInscripcion","TipoPago","Precio","alumnoSeleccionado","setAlumnoSeleccionado","seleccionarAlumno","responseAlumno","NuevoAlumno","fechaSeleccionada","fechaSeleccionadaIngreso","setFechaSeleccionadaIngreso","fechaSeleccionadaExamen","setFechaSeleccionadaExamen","currencies1","setAlumno","utils","DateFnsUtils","format","KeyboardButtonProps","objetoAlumno","image","backgroundRepeat","grey","backgroundPosition","secondary","SignInSide","CssBaseline","elevation","square","noValidate","Home","PaginadorLista","App","openSnackbar","iniciaApp","setIniciaApp","obtenerUsuarioActual","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","exact","path","Boolean","location","hostname","match","sesionUsuarioReducer","state","action","openSnackbarReducer","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a25c8ee.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette : {\r\n        primary : {\r\n            light : \"#63a4fff\",\r\n            main : \"#009900\", //botones verde\r\n            dark : \"#1e88e5\",\r\n            contrastText : \"#ecfad8\" //letra botones\r\n        }\r\n    },\r\n});\r\n\r\nexport default theme;","const style = {\r\n    paper: {\r\n        marginTop: 50,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#fafafa\",\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: 20\r\n    },\r\n    submit: {\r\n        marginTop: 5,\r\n\r\n    },\r\n    avatar: {\r\n        margin: 5,\r\n        //backgroundColor : \"#c62828\",\r\n        width: 100,\r\n        height: 100\r\n    },\r\n    icon: {\r\n        fontSize: 40\r\n    }\r\n};\r\n\r\nexport default style;","import axios from 'axios';\r\n\r\n//axios.defaults.baseURL = 'http://localhost:5000/api';\r\naxios.defaults.baseURL = 'http://controlyoulead-001-site1.ftempurl.com/api';\r\n\r\n\r\naxios.interceptors.request.use((config) => {\r\n    \r\n    const token_seguridad = window.localStorage.getItem('token_seguridad');\r\n\r\n    if(token_seguridad){\r\n        config.headers.Authorization = 'Bearer ' + token_seguridad;\r\n        return config;\r\n    }\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nconst requestGenerico = {\r\n    get : (url) => axios.get(url),\r\n    post: (url, body) => axios.post(url, body),\r\n    put : (url, body) => axios.put(url,body),\r\n    delete : (url) => axios.delete(url)\r\n};\r\n\r\nexport default requestGenerico;","import HttpCliente from \"../servicios/HttpCliente\";\r\nimport axios from 'axios';\r\n\r\nconst instancia = axios.create();\r\ninstancia.CancelToken = axios.CancelToken;\r\ninstancia.isCancel = axios.isCancel;\r\n\r\nexport const registrarUsuario = (usuario) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.post(\"/usuario/registrar\", usuario).then((response) => {\r\n      resolve(response);\r\n    })\r\n    .catch((error) => {\r\n      console.log('error al registrar', error);\r\n      \r\n      resolve(error);\r\n    });\r\n  });\r\n};\r\n\r\nexport const obtenerUsuarioActual = (dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.get(\"/usuario\")\r\n      .then((response) => {\r\n        \r\n        console.log('response',response);\r\n        if(response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile = 'data:image/' + fotoPerfil.extension + ';base64,' + fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n\r\n        dispatch({\r\n          type: \"INICIAR_SESION\",\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log('error actualizar', error);\r\n        \r\n        resolve(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const actualizarUsuario = (usuario, dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.put('/Usuario', usuario)\r\n      .then(response => {\r\n        \r\n          if(response.data && response.data.imagenPerfil){\r\n            let fotoPerfil = response.data.imagenPerfil;\r\n            const nuevoFile = 'data:image/' + fotoPerfil.extension + ';base64,' + fotoPerfil.data;\r\n            response.data.imagenPerfil = nuevoFile;\r\n          }\r\n\r\n          dispatch({\r\n            type : 'INICIAR_SESION',\r\n            sesion : response.data,\r\n            autenticado : true,\r\n          });\r\n          \r\n          resolve(response);\r\n\r\n      })\r\n      .catch(error => {\r\n        resolve(error.response);\r\n      })\r\n  });\r\n};\r\n\r\nexport const loginUsuario = (usuario, dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.post(\"/usuario/login\", usuario).then(response => {\r\n      if(response.data && response.data.imagenPerfil) {\r\n        let fotoPerfil = response.data.imagenPerfil;\r\n        const nuevoFile = \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n        response.data.imagenPerfil = nuevoFile;\r\n      }\r\n      \r\n      dispatch({\r\n        type : \"INICIAR_SESION\",\r\n        sesion : response.data,\r\n        autenticado : true\r\n      })\r\n      \r\n      resolve(response);\r\n    }).catch(error => {\r\n        resolve(error.response);\r\n    });\r\n  });\r\n};\r\n\r\nexport const guardarUsuario = async (usuario) => {\r\n  const endPointInstructor = '/usuario/registrar';\r\n  const promesaInstructor = instancia.post(endPointInstructor, usuario);\r\n  return await Promise.all([promesaInstructor].map(p => p.catch(e => e)));\r\n};\r\n\r\nexport const listUsuarios = () => {\r\n  const endPointUsuario= '/usuario/lista';\r\n  return  new  Promise((resolve, eject) => {\r\n      HttpCliente.get(endPointUsuario).then(response => {\r\n          resolve(response);\r\n      })\r\n  })\r\n};\r\n\r\nexport const editarUser = async (usuario) => {\r\n  const endPointUsuario = '/edit';\r\n  const promesaUsuario = instancia.put(endPointUsuario, usuario);\r\n  return await Promise.all([promesaUsuario].map(p => p.catch(e => e)));\r\n};\r\n\r\nexport const eliminarUsuario = async (usuario) => {\r\n  const endPointAlumno= `/usuario/${usuario.id}`;\r\n  const promesaAlumno = HttpCliente.delete(endPointAlumno, usuario);\r\n  return await Promise.all([promesaAlumno].map(p => p.catch(e => e)));\r\n}","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value = {useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\nimport style from \"../Tool/Style\";\r\nimport {\r\n  guardarUsuario,\r\n  listUsuarios,\r\n  registrarUsuario,\r\n  editarUser,\r\n  eliminarUsuario,\r\n} from \"../../actions/UsuarioActions\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction Copyright() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © YouLEAD  \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nvar list = [];\r\n\r\nconst RegistrarUsuario = () => {\r\n  const classes = useStyles();\r\n\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [usuarioResponse, setUsuarioResponse] = useState();\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const obtenerListaUsuarios = async () => {\r\n      const usuarios = await listUsuarios();\r\n      console.log(\"usuarios\");\r\n      console.log(usuarios.data);\r\n      setUsuarioResponse(usuarios.data);\r\n      //alumnosResponse.push(alumnos.data)\r\n      list = usuarios.data;\r\n      list.map((datos) => console.log(datos.userName));\r\n      //console.log('nya'+ list)\r\n    };\r\n\r\n    return obtenerListaUsuarios();\r\n  }, []);\r\n\r\n  const [usuario, setUsuario] = useState({\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    //ConfirmaPassword : '',\r\n    userName: \"\",\r\n  });\r\n\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const resetearForm = () => {\r\n    setUsuario({\r\n      nombreCompleto: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      //ConfirmaPassword : '',\r\n      userName: \"\",\r\n    });\r\n  };\r\n\r\n  const guardarUsuarioBoton = (e) => {\r\n    e.preventDefault();\r\n    guardarUsuario(usuario).then((respuestas) => {\r\n      const responseUsuario = respuestas[0];\r\n      let mensaje = \"\";\r\n      if (responseUsuario.status === 200) {\r\n        mensaje += \"Se guardo exitosamente el nuevo usuario\";\r\n        resetearForm();\r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n\r\n  const [usuarioSeleccionado, setUsuarioSeleccionado] = useState({\r\n    id: \"\",\r\n    email: \"\",\r\n    UserName: \"\",\r\n  });\r\n\r\n  const resetearForm1 = () => {\r\n    setUsuario({\r\n      email: \"\",\r\n      UserName: \"\",\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUsuarioSeleccionado((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const seleccionarPais = (user, caso) => {\r\n    setUsuarioSeleccionado(user);\r\n    caso === \"Editar\" ? setModalEditar(true) : setModalEliminar(true);\r\n  };\r\n\r\n  const editUsuario = (e) => {\r\n    editarUser(usuarioSeleccionado).then((respuestas) => {\r\n      const responseUsuarioo = respuestas[0];\r\n      let mensaje = \"\";\r\n      if (responseUsuarioo.status === 200) {\r\n        mensaje += \"Se actualizo exitosamente\";\r\n        resetearForm1();\r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n    setModalEditar(false);\r\n  };\r\n\r\n  \r\n\r\n  const eliminar = () => {\r\n    eliminarUsuario(usuarioSeleccionado).then((respuestas) => {\r\n      const responseAlumno = respuestas[0];\r\n      let mensaje = \"\";\r\n      if (responseAlumno.status === 200) {\r\n        mensaje += \"Se elimino exitosamente\";\r\n        resetearForm();\r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n    setModalEliminar(false);\r\n  };\r\n\r\n  return (\r\n    <div style={style.paper} className=\"container\">\r\n      <Card className={classes.root} style={{ background: \"#009900\" }}>\r\n        <CardContent>\r\n          <div style={style.paper} className=\"container\">\r\n            <h1>Usuarios</h1>\r\n            <div className=\"flex-row\">\r\n              <div className=\"flex-large\">\r\n                <h2>Add user</h2>\r\n                <div style={style.paper}>\r\n                  <form style={style.form}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} md={12}>\r\n                        <TextField\r\n                          name=\"nombreCompleto\"\r\n                          value={usuario.nombreCompleto}\r\n                          onChange={ingresarValoresMemoria}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          label=\"Nombre y apellidos\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <TextField\r\n                          name=\"email\"\r\n                          value={usuario.email}\r\n                          onChange={ingresarValoresMemoria}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          label=\"Email\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <TextField\r\n                          name=\"userName\"\r\n                          value={usuario.userName}\r\n                          onChange={ingresarValoresMemoria}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          label=\"UserName\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <TextField\r\n                          name=\"password\"\r\n                          value={usuario.password}\r\n                          onChange={ingresarValoresMemoria}\r\n                          type=\"password\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          label=\"Registre una contraseña\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"center\">\r\n                      <Grid item xs={12} md={6}>\r\n                        <Box mt={8}>\r\n                          <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"medium\"\r\n                            startIcon={<SaveIcon />}\r\n                            style={style.submit}\r\n                            onClick={guardarUsuarioBoton}\r\n                          >\r\n                            Guardar Usuario\r\n                          </Button>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n\r\n              <Box mt={10}>\r\n                <div className=\"flex-large\">\r\n                  <h2>View users</h2>\r\n                  <div align=\"center\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <table className=\"table table-responsive text-center text-white\">\r\n                          <thead style={{ background: \"#009900\" }}>\r\n                            <tr>\r\n                              <th scope=\"col\"> ID </th>\r\n                              <th scope=\"col\"> UserName </th>\r\n                              <th scope=\"col\"> Email</th>\r\n                              <th scope=\"col\"> Editar</th>\r\n                              <th scope=\"col\"> Eliminar</th>\r\n                            </tr>\r\n                          </thead>\r\n\r\n                          <tbody>\r\n                            {list.map((user) => (\r\n                              <tr class=\"text-left text-dark\" key={user.id}>\r\n                                <td>{user.id}</td>\r\n                                <td>{user.userName}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() =>\r\n                                      seleccionarPais(user, \"Editar\")\r\n                                    }\r\n                                  >\r\n                                    Editar\r\n                                  </button>\r\n                                </td>\r\n                                {\"   \"}\r\n                                <td>\r\n                                  <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() =>\r\n                                      seleccionarPais(user, \"Eliminar\")\r\n                                    }\r\n                                  >\r\n                                    Eliminar\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Box>\r\n            </div>\r\n\r\n            <Box mt={10}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n            <Modal isOpen={modalEditar}>\r\n              <ModalHeader background=\"#388e3c\">\r\n                <div>\r\n                  <h3>Editar Usuario</h3>\r\n                </div>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"form-group\">\r\n                  <label>ID</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name=\"id\"\r\n                    value={usuarioSeleccionado && usuarioSeleccionado.id}\r\n                  />\r\n                  <br />\r\n\r\n                  <label>Email</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={usuarioSeleccionado && usuarioSeleccionado.email}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <br />\r\n\r\n                  <label>UserName</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"UserName\"\r\n                    value={usuarioSeleccionado && usuarioSeleccionado.UserName}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <br />\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => editUsuario()}\r\n                >\r\n                  Actualizar\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => setModalEditar(false)}\r\n                >\r\n                  Cancelar\r\n                </button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEliminar}>\r\n              <ModalBody>\r\n                Estás Seguro que deseas eliminar el Usuario{\" \"}\r\n                {usuarioSeleccionado && usuarioSeleccionado.userName}\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <button className=\"btn btn-danger\" onClick={() => eliminar()}>\r\n                  Sí\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setModalEliminar(false)}\r\n                >\r\n                  No\r\n                </button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrarUsuario;\r\n","export default __webpack_public_path__ + \"static/media/YouLEAD.703c01b2.jpg\";","import React, { useState } from 'react';\r\nimport style from '../Tool/Style';\r\nimport { Container, Avatar, Typography, TextField, Button } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {loginUsuario} from '../../actions/UsuarioActions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useStateValue } from '../../contexto/store';\r\nimport descarga from '../../assets/img/YouLEAD.jpg';\r\n\r\nconst Login = (props) => {\r\n    const [{usuarioSesion}, dispatch]  = useStateValue();\r\n\r\n    const [usuario, setUsuario] = useState({\r\n        Email : '',\r\n        Password : ''\r\n    })\r\n\r\n    const ingresarValoresMemoria = e => {\r\n        const {name,value} = e.target;\r\n        setUsuario(anterior => ({\r\n            ...anterior,\r\n            [name] : value\r\n        }))\r\n    }\r\n\r\n    const loginUsuarioBoton = e => {\r\n        e.preventDefault();\r\n        loginUsuario(usuario, dispatch).then(response => {\r\n            console.log('response.data.token', response.data.token);\r\n            if(response.status === 200) {\r\n                window.localStorage.setItem('token_seguridad', response.data.token);\r\n                props.history.push(\"/\");\r\n            }else{\r\n                dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : \"Las credenciales del usuario son incorrectas\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n       <Container maxWidth=\"xs\">\r\n           <div style={style.paper}>\r\n               <div>\r\n               <Typography component=\"div\" variant=\"h1\"  style={{  height: '25vh' }}>\r\n                    <img \r\n                        src={descarga} \r\n                        alt=\"\"  \r\n                        height={\"650\"}\r\n                        width={\"600\"} \r\n                    />\r\n                </Typography>\r\n               </div>\r\n                \r\n                \r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Login de Usuario\r\n                </Typography>\r\n                <form style={style.form}>\r\n                    <TextField name=\"Email\" value={usuario.Email} onChange={ingresarValoresMemoria} variant=\"outlined\" label=\"Email\" fullWidth margin=\"normal\"/>\r\n                    <TextField name=\"Password\" value={usuario.Password} onChange={ingresarValoresMemoria} variant=\"outlined\" type=\"password\"  label=\"Password\" fullWidth margin=\"normal\" />\r\n                    <Button type=\"submit\" onClick={loginUsuarioBoton} fullWidth variant=\"contained\" color=\"primary\" style={style.submit}>\r\n                        Ingresar\r\n                    </Button>\r\n                </form>\r\n\r\n           </div>\r\n       </Container>\r\n    );\r\n};\r\n\r\nexport default  withRouter(Login);","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport style from \"../Tool/Style\";\r\nimport { Container, Typography, Grid, TextField, Button, Avatar, Box} from \"@material-ui/core\";\r\nimport { actualizarUsuario } from \"../../actions/UsuarioActions\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport reactFoto from \"../../logo.svg\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { obtenerDataImagen } from \"../../actions/ImageAction\";\r\n\r\nconst PerfilUsuario = () => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [usuario, setUsuario] = useState({\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmarPassword: \"\",\r\n    userName: \"\",\r\n    imagenPerfil: null,\r\n    fotoUrl: \"\",\r\n  });\r\n\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    setUsuario(sesionUsuario.usuario);\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      fotoUrl: sesionUsuario.usuario.imagenPerfil,\r\n      imagenPerfil : null\r\n    }));\r\n  }, []);\r\n\r\n  const guardarUsuario = (e) => {\r\n    e.preventDefault();\r\n    console.log('usuario beofre send', usuario);\r\n    actualizarUsuario(usuario, dispatch).then((response) => {\r\n      \r\n      if (response.status === 200) {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje: \"Se guardaron exitosamente los cambios en Perfil Usuario\",\r\n          },\r\n        });\r\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n        \r\n      } else {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje:\r\n              \"Errores al intentar guardar en : \" + Object.keys(response.data.errors),\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const subirFoto = (imagenes) => {\r\n    const foto = imagenes[0];\r\n    const fotoUrl = URL.createObjectURL(foto);\r\n\r\n    obtenerDataImagen(foto).then((respuesta) => {\r\n      setUsuario((anterior) => ({\r\n        ...anterior,\r\n        imagenPerfil: respuesta, //respuesta es un json que proviene del action obtener imagen { data : ..., nombre:...,extension:... }\r\n        fotoUrl: fotoUrl, // el archivo en formato url\r\n      }));\r\n    });\r\n  };\r\n\r\n  const fotoKey = uuidv4();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Avatar style={style.avatar} src={usuario.fotoUrl || reactFoto} />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Perfil de Usuario\r\n        </Typography>\r\n\r\n        <Box mt={6}>\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n              <Grid item xs={12} md={12}>\r\n                <TextField\r\n                  name=\"nombreCompleto\"\r\n                  value={usuario.nombreCompleto}\r\n                  onChange={ingresarValoresMemoria}\r\n                  //variant=\"outlined\"\r\n                  fullWidth\r\n                  label=\"Ingrese nombre y apellidos\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"username\"\r\n                  value={usuario.userName}\r\n                  onChange={ingresarValoresMemoria}\r\n                  //variant=\"outlined\"\r\n                  fullWidth\r\n                  label=\"Ingrese Username\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  //variant=\"filled\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  value={usuario.email}\r\n                  onChange={ingresarValoresMemoria}\r\n                  fullWidth\r\n                  label=\"Ingrese email\"\r\n                  \r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"password\"\r\n                  value={usuario.password}\r\n                  onChange={ingresarValoresMemoria}\r\n                  type=\"password\"\r\n                  //variant=\"outlined\"\r\n                  fullWidth\r\n                  label=\"Ingrese password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"confirmarPassword\"\r\n                  value={usuario.confirmarPassword}\r\n                  onChange={ingresarValoresMemoria}\r\n                  type=\"password\"\r\n                  //variant=\"outlined\"\r\n                  fullWidth\r\n                  label=\"confirme password\"\r\n                />\r\n              </Grid>\r\n            \r\n            <Grid item xs={12} md={12}>\r\n              <ImageUploader\r\n                withIcon={false}\r\n                key={fotoKey}\r\n                singleImage={true}\r\n                buttonText=\"Seleccione una imagen de perfil\"\r\n                onChange={subirFoto}\r\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                maxFileSize={5242880}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={guardarUsuario}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                style={style.submit}\r\n              >\r\n                Guardar Datos\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n        </form>\r\n        </Box>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default PerfilUsuario;\r\n","export const obtenerDataImagen = imagen => {\r\n    return new Promise((resolve, eject) => {\r\n        const nombre = imagen.name;\r\n        const extension = imagen.name.split(\".\").pop();\r\n\r\n        const lector = new FileReader();\r\n        lector.readAsDataURL(imagen);\r\n        \r\n        lector.onload = () => resolve(\r\n            {\r\n                data : lector.result.split(\",\")[1],\r\n                nombre : nombre,\r\n                extension : extension\r\n            }    \r\n        );\r\n         lector.onerror = error => PromiseRejectionEvent(error);\r\n    })\r\n}\r\n\r\n","import React from 'react';\r\nimport { List, ListItem, ListItemText, Divider } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport PeopleOutlineOutlinedIcon from '@material-ui/icons/PeopleOutlineOutlined';\r\n\r\nexport const MenuIzquierda = ({classes}) => (\r\n    <div className = {classes.list}>\r\n        <List>\r\n            \r\n            <ListItem component={Link} button to=\"/auth/registrar\">\r\n                <i className=\"material-icons\">account_circle</i>\r\n                <ListItemText classes={{primary: classes.listItemText}} primary=\"Configuracion Usuarios\" />\r\n            </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n            <ListItem component={Link} button  to=\"/instructor/nuevo\">\r\n                 <i className=\"material-icons\">person_add</i>\r\n                 <ListItemText classes={{primary: classes.listItemText}} primary=\"Nuevo Instructor\" />\r\n            </ListItem>\r\n            <ListItem component={Link} button to=\"/instructor/paginador\">\r\n                <i className=\"material-icons\">list_alt</i>\r\n                <ListItemText classes={{primary: classes.listItemText}} primary =\"Lista de Instructores\" />\r\n            </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>            \r\n            <ListItem component={Link} button to=\"/alumno/paginador\">\r\n                <i className=\"material-icons\">list_alt</i>\r\n                <ListItemText classes={{primary: classes.listItemText}} primary=\"Lista Alumnos\"/>\r\n            </ListItem>\r\n        </List>\r\n    </div>\r\n);","import React from 'react';\r\nimport { List, ListItem, Avatar, ListItemText } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport FotoUsuarioTemp from \"../../../logo.svg\";\r\n\r\nexport const MenuDerecha = ( { \r\n    classes,\r\n    usuario,\r\n    salirSesion\r\n}) => (\r\n    <div className={classes.list}>\r\n        <List>\r\n            <ListItem button component={Link}>\r\n                <Avatar src={ usuario.imagenPerfil || FotoUsuarioTemp }/>\r\n                <ListItemText classes={{primary : classes.listItemText}} primary={ usuario ? usuario.nombreCompleto : \"\"}/>\r\n            </ListItem>\r\n            <ListItem button onClick={salirSesion}>\r\n                <ListItemText classes={{primary : classes.listItemText}} primary = \"Salir\"/>\r\n            </ListItem>\r\n        </List>\r\n    </div>\r\n);","import React, { useState, useEffect } from \"react\";\r\nimport { Toolbar, IconButton, Typography, makeStyles, Button, Avatar, Drawer, List, ListItem, ListItemText,Divider} from \"@material-ui/core\";\r\nimport FotoUsuarioTemp from \"../../../logo.svg\";\r\nimport { useStateValue } from \"../../../contexto/store\";\r\nimport { MenuIzquierda } from \"./menuIzquierda\";\r\nimport {MenuDerecha} from './menuDerecha';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seccionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      \r\n    },\r\n  },\r\n  seccionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n      \r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  avatarSize: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  list: {\r\n    width: 250,\r\n    \r\n  },\r\n  listItemText: {\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n    paddingLeft: \"15px\",\r\n    \r\n  },\r\n}));\r\n\r\nconst BarSesion = (props) => {\r\n  const classes = useStyles();\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n\r\n  const [abrirMenuIzquierda, setAbrirMenuIzquierda] = useState(false);\r\n\r\n  const [abrirMenuDerecha, setAbrirMenuDerecha] = useState(false);\r\n\r\n  const abrirMenuIzquierdaAction = () => {\r\n    setAbrirMenuIzquierda(true);\r\n  };\r\n\r\n  const cerrarMenuIzquierda = () => {\r\n    setAbrirMenuIzquierda(false);\r\n  };\r\n\r\n  const abrirMenuDerechaAction = () => {\r\n    setAbrirMenuDerecha(true);\r\n  }\r\n\r\n  const cerrarMenuDerecha = () => {\r\n    setAbrirMenuDerecha(false);\r\n  };\r\n\r\n  const salirSesionApp = () => {\r\n    console.log('salir sesion');\r\n    localStorage.removeItem(\"token_seguridad\");\r\n\r\n    dispatch({\r\n       type : \"SALIR_SESION\",\r\n       nuevoUsuario : null,\r\n       autenticado : false\r\n    })\r\n\r\n    props.history.push(\"/auth/login\");\r\n  };\r\n\r\n  const [isDropdownvVisible, toogleDropdownVisibility] = useState(false);\r\n\r\n  function handleClick() {\r\n    let payload = window.localStorage.getItem('token_seguridad');\r\n    console.log(payload);\r\n    payload = payload.split(\".\")[1]\r\n    let temp =  window.atob(payload)\r\n    let nya = JSON.parse(temp)\r\n    console.log(nya)\r\n    console.log(nya.role)\r\n    let rol = nya.role\r\n    console.log(rol)\r\n    if(rol == 'Admi'){\r\n      return toogleDropdownVisibility(!isDropdownvVisible)\r\n    }else{\r\n      console.log(\"No tienes permiso\")\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(isDropdownvVisible);\r\n  })\r\n\r\n  return (\r\n    <React.Fragment  >\r\n      <Drawer\r\n        open={abrirMenuIzquierda}\r\n        onClose={cerrarMenuIzquierda}\r\n        anchor=\"left\"\r\n        \r\n      >\r\n        <div\r\n          //className={classes.list}\r\n          //onKeyDown={cerrarMenuIzquierda}\r\n          //onClick={cerrarMenuIzquierda}\r\n          \r\n        >\r\n          <List>\r\n            <ListItem button onClick={handleClick}> \r\n              <i className=\"material-icons\">lock</i>\r\n              <ListItemText classes={{primary: classes.listItemText}} />\r\n                {isDropdownvVisible && (\r\n                  <MenuIzquierda classes={classes} />\r\n                )}\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n\r\n        <div className = {classes.list}>\r\n          <div>\r\n            <List>\r\n                <ListItem component={Link} button to=\"/auth/perfil\">\r\n                    <i className=\"material-icons\">account_box</i>\r\n                    <ListItemText classes={{primary: classes.listItemText}} primary=\"Mi Perfil\" />\r\n                </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem component={Link} button  to=\"/alumno/nuevo\">\r\n                    <i className=\"material-icons\">person_add</i>\r\n                    <ListItemText classes={{primary: classes.listItemText}} primary=\"Nuevo Alumno\" />\r\n                </ListItem>\r\n            </List>\r\n            <List>\r\n              <ListItem component={Link} button to=\"/alumno/listaAlumno\">\r\n                  <i className=\"material-icons\">list_alt</i>\r\n                  <ListItemText classes={{primary: classes.listItemText}} primary=\"Lista Alumnos\"/>\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n\r\n      <Drawer\r\n        open={abrirMenuDerecha}\r\n        onClose={cerrarMenuDerecha}\r\n        anchor=\"right\"\r\n        \r\n      >\r\n        <div\r\n          className={classes.list}\r\n          onClick={cerrarMenuDerecha}\r\n          onKeyDown={cerrarMenuDerecha}\r\n          \r\n        >\r\n          <MenuDerecha\r\n            \r\n            classes={classes} \r\n            salirSesion={salirSesionApp} \r\n            usuario = { sesionUsuario ? sesionUsuario.usuario : null}\r\n            />\r\n        </div>\r\n      </Drawer>\r\n    \r\n      <Toolbar style={{ background: \"#1976d2\" }} >\r\n        <IconButton color=\"inherit\" onClick={abrirMenuIzquierdaAction}>\r\n          <i className=\"material-icons\">menu_open</i>\r\n        </IconButton>\r\n\r\n        <Typography variant=\"h6\">Control Escolar</Typography>\r\n        <div className={classes.grow}></div>\r\n         \r\n        <div className={classes.seccionDesktop}>\r\n          <Button color=\"inherit\" onClick={salirSesionApp}>Salir</Button>\r\n          <Button color=\"inherit\">\r\n            {sesionUsuario ? sesionUsuario.usuario.userName : \"\"}\r\n          </Button>\r\n          <Avatar src={sesionUsuario.usuario.imagenPerfil ||  FotoUsuarioTemp}></Avatar>\r\n        </div>\r\n\r\n        <div className={classes.seccionMobile}>\r\n          <IconButton color=\"inherit\" onClick={abrirMenuDerechaAction}>\r\n            <i className=\"material-icons\">more_vert</i>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(BarSesion);\r\n\r\n","import React from 'react';\r\nimport {AppBar} from \"@material-ui/core\";\r\nimport BarSesion from './bar/BarSesion';\r\nimport { useStateValue } from '../../contexto/store';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst AppNavbar = () => {\r\n    const [{sesionUsuario} , dispatch] = useStateValue();\r\n\r\n    return sesionUsuario \r\n      ? (sesionUsuario.autenticado == true ? <AppBar  position=\"static\"><BarSesion /></AppBar> : null )\r\n      : null;\r\n\r\n    // return (\r\n    //   <AppBar position=\"static\">\r\n    //     <BarSesion />\r\n    //   </AppBar>\r\n    // );\r\n};\r\n\r\nexport default AppNavbar;","import React from \"react\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction RutaSegura({ component: Component, ...rest }) {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <Route \r\n        {...rest}\r\n        render = { (props) =>\r\n            sesionUsuario ? (\r\n                sesionUsuario.autenticado == true ? (\r\n                    <Component {...props} {...rest} />\r\n                )\r\n                : <Redirect to=\"/auth/perfil\" />\r\n            ): <Redirect to=\"/auth/login\" />\r\n        }\r\n    />\r\n  );\r\n}\r\n\r\nexport default RutaSegura;\r\n","import HttpCliente from '../servicios/HttpCliente';\r\nimport axios from 'axios';\r\n\r\nconst instancia = axios.create();\r\ninstancia.CancelToken = axios.CancelToken;\r\ninstancia.isCancel = axios.isCancel;\r\n\r\nexport const guardarInstructor = async (instructor, imagen) => {\r\n    const endPointInstructor = '/instructores';\r\n    const promesaInstructor = HttpCliente.post(endPointInstructor, instructor);\r\n    \r\n    if(imagen){\r\n        const endPointImagen = '/documento';    \r\n        const promesaImagen = HttpCliente.post(endPointImagen, imagen);\r\n        return await Promise.all([promesaInstructor, promesaImagen].map(p => p.catch(e => e)));\r\n    }else{\r\n        return await Promise.all([promesaInstructor].map(p => p.catch(e => e)));\r\n    }\r\n};\r\n\r\nexport const listInstructores = () => {\r\n    const endPointUsuario= '/instructores/lista';\r\n    return  new  Promise((resolve, eject) => {\r\n        HttpCliente.get(endPointUsuario).then(response => {\r\n            //console.log(\"listInstructores\")\r\n            resolve(response);\r\n        })\r\n    })\r\n  };\r\n\r\nexport const paginacionInstructor = (paginador) => {\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.post('/instructores/report', paginador).then(response => {\r\n            resolve(response);\r\n        })\r\n    })\r\n}\r\n\r\nexport const editarInstructor = async (instructor) => {\r\n    const endPointAlumno= `/instructores/${instructor.InstructorId}`;\r\n    const promesaAlumno = HttpCliente.put(endPointAlumno, instructor);\r\n    return await Promise.all([promesaAlumno].map(p => p.catch(e => e)));\r\n}\r\n\r\nexport const eliminarInstructor = async (instructor) => {\r\n    const endPointAlumno= `/instructores/${instructor.instructorId}`;\r\n    const promesaAlumno = HttpCliente.delete(endPointAlumno, instructor);\r\n    return await Promise.all([promesaAlumno].map(p => p.catch(e => e)));\r\n}\r\n\r\nexport const pdfInstructor = (paginador) => {\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.post(window.open(\"http://localhost:5000/api/ExportarDocumento\",\"_self\"), paginador).then(response => {\r\n            resolve(response);\r\n        })\r\n    })\r\n}","import React, { useState } from 'react';\r\nimport {Container, Typography, Grid, TextField, Button} from '@material-ui/core';\r\nimport style from '../Tool/Style';\r\nimport ImageUploader from 'react-images-upload';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {obtenerDataImagen} from '../../actions/ImageAction';\r\nimport { guardarInstructor } from '../../actions/InstructorAction';\r\nimport { useStateValue } from '../../contexto/store';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction Copyright() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © YouLEAD  '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\nsubmit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n},\r\n}));\r\n\r\n\r\nconst NuevoInstructor = () => {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          minWidth: 275,\r\n        },\r\n        bullet: {\r\n          display: 'inline-block',\r\n          margin: '0 2px',\r\n          transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n          fontSize: 14,\r\n        },\r\n        pos: {\r\n          marginBottom: 12,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n\r\n    const [{sesionUsuario}, dispatch]  = useStateValue();\r\n    const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\r\n\r\n    const currencies = [\r\n        {\r\n          value: 'Master',\r\n          label: 'Master',\r\n        },\r\n        {\r\n          value: 'Socio',\r\n          label: 'Socio',\r\n        },\r\n        {\r\n          value: 'Master-Socio',\r\n          label: 'Master-Socio',\r\n        },\r\n      ];\r\n\r\n    const [instructor, setInstructor] = useState({\r\n        Nombre : '',\r\n        Apellidos : '',\r\n        TelefonoM : '',\r\n        Email : '',\r\n        CentroAprendizaje : '',\r\n        CantAlumnos : 0,\r\n        Categoria : '',\r\n        UplineMaster : '',\r\n        ClaveInstructor : '',\r\n        ClaveUpline : ''\r\n    });\r\n\r\n    const resetearForm = () => {\r\n        setFechaSeleccionada(new Date());\r\n        setInstructor({\r\n            Nombre : '',\r\n            Apellidos : '',\r\n            TelefonoM : '',\r\n            Email : '',\r\n            CentroAprendizaje : '',\r\n            CantAlumnos : 0,\r\n            Categoria : '',\r\n            UplineMaster : '',\r\n            ClaveInstructor : '',\r\n            ClaveUpline : ''\r\n        })\r\n    }\r\n\r\n    const ingresarValoresMemoria = e => {\r\n        const { name, value } = e.target;\r\n\r\n         setInstructor( (anterior) => ({\r\n             ...anterior,\r\n             [name] : value\r\n         })); \r\n    }\r\n\r\n    const guardarInstructorBoton = e => {\r\n        e.preventDefault();\r\n        //const instructorId = uuidv4();\r\n\r\n        const objetoInstructor = {\r\n            Nombre : instructor.Nombre,\r\n            Apellidos : instructor.Apellidos,\r\n            TelefonoM : parseInt(instructor.TelefonoM),\r\n            Email : instructor.Email,\r\n            CentroAprendizaje : instructor.CentroAprendizaje,\r\n            CantAlumnos : parseInt(instructor.CantAlumnos),\r\n            Categoria : instructor.Categoria,\r\n            UplineMaster : instructor.UplineMaster,\r\n            ClaveInstructor : instructor.ClaveInstructor,\r\n            ClaveUpline : instructor.ClaveUpline,\r\n\t        //instructorId : instructorId \r\n        };     \r\n\r\n        guardarInstructor(objetoInstructor).then(respuestas => {\r\n            const responseInstructor = respuestas[0];\r\n            let mensaje = \"\";\r\n\r\n            if(responseInstructor.status === 200) {\r\n                mensaje += \"Se guardo exitosamente el nuevo instructor\"\r\n                resetearForm();\r\n            }else{\r\n                mensaje += \"Errores :\" + Object.keys(responseInstructor.response.data.errors);\r\n            }\r\n            \r\n            dispatch({\r\n                type : \"OPEN_SNACKBAR\",\r\n                openMensaje : {\r\n                    open : true,\r\n                    mensaje : mensaje\r\n                }\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={style.paper} className=\"container\">\r\n            <Card className={classes.root} style={{ background: \"#009900\" }}>\r\n            <CardContent >\r\n                <div style={style.paper} className=\"container\">\r\n                    <h2>Cédula de registro</h2>\r\n                    <div className=\"flex-row\">\r\n                        <div className=\"flex-large\">\r\n                            <h3>Datos generales del Instructor</h3>\r\n                            <div style={style.paper}>\r\n                                <form style={style.form}></form>\r\n                                <Grid container spacing={5}>\r\n                                    <Grid item xs={12} md={4}>\r\n                                        <TextField \r\n                                            name=\"Nombre\"\r\n                                            //variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Ingrese Nombre(s)\"\r\n                                            value = {instructor.Nombre}\r\n                                            onChange = {ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={5}>\r\n                                        <TextField \r\n                                            name=\"Apellidos\"\r\n                                            //variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Apellidos\"\r\n                                            value = {instructor.Apellidos}\r\n                                            onChange = {ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <TextField \r\n                                            name = \"TelefonoM\"\r\n                                            //variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Telefono\"\r\n                                            value = {instructor.TelefonoM}\r\n                                            onChange = {ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={5}>\r\n                                        <TextField \r\n                                            name = \"Email\"\r\n                                            //variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Email\"\r\n                                            value = {instructor.Email}\r\n                                            onChange = {ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={5}>\r\n                                        <TextField \r\n                                            name=\"CentroAprendizaje\"\r\n                                            //variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Ingresar CentroAprendizaje\"\r\n                                            value = {instructor.CentroAprendizaje}\r\n                                            onChange = {ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={2}>\r\n                                        <TextField \r\n                                            name=\"CantAlumnos\"\r\n                                            type=\"number\"\r\n                                            fullWidth\r\n                                            label = \"Cantidad Alumnos\"\r\n                                            value = {instructor.CantAlumnos}\r\n                                            onChange = {ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <TextField\r\n                                            name=\"Categoria\"\r\n                                            //variant=\"outlined\"\r\n                                            select\r\n                                            fullWidth\r\n                                            label=\"Categoria\"\r\n                                            value = {instructor.Categoria}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                            helperText=\"Please select your category\"\r\n                                            >\r\n                                            {currencies.map((option) => (\r\n                                                <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <TextField \r\n                                            name=\"ClaveInstructor\"\r\n                                            //variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label = \"Registre su clave de Instructor\"\r\n                                            value = {instructor.ClaveInstructor}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <TextField \r\n                                            name = \"UplineMaster\"\r\n                                            //variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label = \"UplineMaster\"\r\n                                            value = {instructor.UplineMaster}\r\n                                            onChange = {ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={12} md={3}>\r\n                                        <TextField \r\n                                            name = \"ClaveUpline\"\r\n                                            //variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label = \"Clave de su Upline\"\r\n                                            value = {instructor.ClaveUpline}\r\n                                            onChange = {ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container justify=\"center\">\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Box mt={10}>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                fullWidth\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                size=\"large\"\r\n                                                startIcon={<SaveIcon />}\r\n                                                style={style.submit}\r\n                                                onClick = {guardarInstructorBoton}\r\n                                            >\r\n                                                Guardar Instructor\r\n                                            </Button>                 \r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                    \r\n                                    \r\n                                <Box mt={10}>\r\n                                    <Copyright />\r\n                                </Box>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NuevoInstructor; ","import React, {useState, useEffect} from 'react';\r\n\r\nexport default function ControlTyping(texto, delay) {\r\n    const [textoValor, setTextoValor] = useState();\r\n\r\n    useEffect(()=> {\r\n\r\n        const manejador = setTimeout( () => {\r\n            setTextoValor(texto);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(manejador);\r\n        }\r\n\r\n    }, [texto]);\r\n\r\n    return textoValor;\r\n}","import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport style from '../Tool/Style';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport const ExportToExcel = ({ apiData, fileName }) => {\r\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportToCSV = (apiData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <di style={style.paper}>\r\n      <Fab  \r\n          style={style.submit} \r\n          variant=\"extended\" \r\n          color=\"primary\" \r\n          aria-label=\"add\" \r\n          className={classes.margin} \r\n          onClick = {(e) => exportToCSV(apiData, fileName)}\r\n        >\r\n        <GetAppIcon className={classes.extendedIcon} />\r\n          Export Excel\r\n      </Fab>\r\n    </di>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  paginacionInstructor,\r\n  editarInstructor,\r\n  eliminarInstructor,\r\n  pdfInstructor,\r\n  listInstructores,\r\n} from \"../../actions/InstructorAction\";\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableBody,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  Hidden,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport ControlTyping from \"../Tool/ControlTyping\";\r\nimport style from \"../Tool/Style\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\n\r\nimport { ExportToExcel } from \"./ExportToExcel\";\r\nvar list = [];\r\nvar lista = [];\r\n\r\nconst PaginadorInstructor = () => {\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: \"#009900\",\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [data, setData] = useState([]);\r\n  const fileName = \"ListaInstructores\";\r\n\r\n  /*const [usuarioResponse, setUsuarioResponse] = useState();\r\n  useEffect(()=> {\r\n    const obtenerListaUsuarios = async() => {\r\n        const usuarios = await listInstructores();\r\n        console.log('---------------------------------------------------------------------------------');\r\n        console.log('---------------------------------------------------------------------------------');\r\n       // console.log(usuarios.data.map(i => i.alumnos));\r\n        console.log('---------------------------------------------------------------------------------');\r\n        setUsuarioResponse(usuarios.data);\r\n        //alumnosResponse.push(alumnos.data)\r\n        lista = usuarios.data.map(i =>i.alumnos);\r\n        console.log(lista.map(alumno => alumno))\r\n        console.log('---------------------------------------------------------------------------------');\r\n        //lista.map(datos => console.log( datos) )\r\n        \r\n        \r\n    }\r\n    \r\n    return obtenerListaUsuarios();\r\n},[])*/\r\n\r\n  const [textoBusquedaInstructor, setTextoBusquedaInstructor] = useState(\"\");\r\n  const typingBuscadorTexto = ControlTyping(textoBusquedaInstructor, 900);\r\n\r\n  const [paginadorRequest, setPaginadorRequest] = useState({\r\n    titulo: \"\",\r\n    numeroPagina: 0,\r\n    cantidadElementos: 5,\r\n  });\r\n\r\n  const [paginadorResponse, setPaginadorResponse] = useState({\r\n    listaRecords: [],\r\n    totalRecords: 0,\r\n    numeroPaginas: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const obtenerListaInstructor = async () => {\r\n      let nombreVariant = \"\";\r\n      let paginaVariant = paginadorRequest.numeroPagina + 1;\r\n\r\n      if (typingBuscadorTexto) {\r\n        nombreVariant = typingBuscadorTexto;\r\n        paginaVariant = 1;\r\n      }\r\n\r\n      const objetoPaginadorRequest = {\r\n        nombre: nombreVariant,\r\n        numeroPagina: paginaVariant,\r\n        cantidadElementos: paginadorRequest.cantidadElementos,\r\n      };\r\n\r\n      const response = await paginacionInstructor(objetoPaginadorRequest);\r\n      const listaNueva = await listInstructores();\r\n\r\n      console.log(response.data);\r\n      console.log(\r\n        \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n      );\r\n      response.data.listaRecords.map((i) => {\r\n        i.alumnos =[]\r\n        return i;\r\n      });\r\n      response.data.listaRecords = listaNueva.data\r\n      console.log(response.data.listaRecords);\r\n      console.log(\r\n        \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n      );\r\n      console.log(listaNueva.data);\r\n      setPaginadorResponse(response.data);\r\n    };\r\n\r\n    obtenerListaInstructor();\r\n  }, [paginadorRequest, typingBuscadorTexto]);\r\n\r\n  const cambiarPagina = (event, nuevaPagina) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      numeroPagina: parseInt(nuevaPagina),\r\n    }));\r\n  };\r\n\r\n  const cambiarCantidadRecords = (event) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      cantidadElementos: parseInt(event.target.value),\r\n      numeroPagina: 0,\r\n    }));\r\n  };\r\n\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [modalLista, setModalLista] = useState(false);\r\n\r\n  const [instructorSeleccionado, setInstructorSeleccionado] = useState({\r\n    InstructorId: \"\",\r\n    Nombre: \"\",\r\n    Apellidos: \"\",\r\n    Email: \"\",\r\n    TelefonoM: \"\",\r\n    CentroAprendizaje: \"\",\r\n    CantAlumnos: 0,\r\n    Categoria: \"\",\r\n    UplineMaster: \"\",\r\n    ClaveInstructor: \"\",\r\n    ClaveUpline: \"\",\r\n    alumnos: [],\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInstructorSeleccionado((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const seleccionarInstructor = (instructor, caso) => {\r\n    setInstructorSeleccionado(instructor);\r\n    caso === \"Editar\" ? setModalEditar(true) : setModalEliminar(true);\r\n  };\r\n\r\n  const selectInstructor = (instructor, caso1) => {\r\n    setInstructorSeleccionado(instructor);\r\n    console.log(\"*************************************************\");    \r\n    lista = instructor.alumnos\r\n    console.log(lista);\r\n    console.log(\"*************************************************\");\r\n    setInstructorSeleccionado(instructor);\r\n\r\n    caso1 === \"Lista\" ? setModalLista(true) : setModalLista(true);\r\n  };\r\n\r\n  const editInstructor = () => {\r\n    instructorSeleccionado.CantAlumnos = +instructorSeleccionado.CantAlumnos;\r\n    instructorSeleccionado.TelefonoM = +instructorSeleccionado.TelefonoM;\r\n    editarInstructor(instructorSeleccionado).then((respuestas) => {\r\n      const responseAlumno = respuestas[0];\r\n\r\n      let mensaje = \"\";\r\n      if (responseAlumno.status === 200) {\r\n        mensaje += \"Se actualizo exitosamente!!\";\r\n        setModalEditar(false);\r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  const eliminar = () => {\r\n    eliminarInstructor(instructorSeleccionado).then((respuestas) => {\r\n      const responseAlumno = respuestas[0];\r\n      let mensaje = \"\";\r\n      if (responseAlumno.status === 200) {\r\n        mensaje += \"Se elimino exitosamente\";\r\n      }else {\r\n        mensaje +=\r\n          \"Error: No se pudo eliminar\" \r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n    setModalEliminar(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", width: \"100%\" }} className=\"container\">\r\n      <div style={style.paper}>\r\n        <h2>Lista de Instructores</h2>\r\n      </div>\r\n      <Grid container style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\r\n        <Grid item xs={12} sm={4} md={24}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"textoBusquedaInstructor\"\r\n            variant=\"outlined\"\r\n            label=\"Buscar instructor\"\r\n            onChange={(e) => setTextoBusquedaInstructor(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">InstructorID</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Instructores</StyledTableCell>\r\n              <Hidden mdDown>\r\n                <StyledTableCell align=\"left\">Apellidos</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Telefono</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Email</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  Centro Aprendizaje\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">Cantidad Alumnos</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Categoria</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Clave Instructor</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Upline Master</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Clave Upline</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Ver</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Editar</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Eliminar</StyledTableCell>\r\n              </Hidden>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginadorResponse.listaRecords.map((instructor) => (\r\n              <TableRow key={(instructor.nombre, instructor.instructorId)}>\r\n                <TableCell align=\"left\">{instructor.instructorId}</TableCell>\r\n                <TableCell align=\"left\">{instructor.nombre}</TableCell>\r\n\r\n                <Hidden mdDown>\r\n                  <TableCell align=\"left\">{instructor.apellidos}</TableCell>\r\n                  <TableCell align=\"left\">{instructor.telefonoM}</TableCell>\r\n                  <TableCell align=\"left\">{instructor.email}</TableCell>\r\n                  <TableCell align=\"left\">{instructor.centroAprendizaje}</TableCell>\r\n                  <TableCell align=\"left\">{instructor.cantAlumnos}</TableCell>\r\n                  <TableCell align=\"left\">{instructor.categoria}</TableCell>\r\n                  <TableCell align=\"left\">{instructor.claveInstructor}</TableCell>\r\n                  <TableCell align=\"left\">{instructor.uplineMaster}</TableCell>\r\n                  <TableCell align=\"left\">{instructor.claveUpline}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-info\"\r\n                        onClick={() => selectInstructor(instructor, \"Lista\")}\r\n                      >\r\n                        <ListIcon className={classes.extendedIcon} />\r\n                      </button>\r\n                    </td>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-primary\"\r\n                        onClick={() =>\r\n                          seleccionarInstructor(instructor, \"Editar\")\r\n                        }\r\n                      >\r\n                        <EditIcon className={classes.extendedIcon} />\r\n                      </button>\r\n                    </td>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={() =>\r\n                          seleccionarInstructor(instructor, \"Eliminar\")\r\n                        }\r\n                      >\r\n                        <DeleteIcon className={classes.extendedIcon} />\r\n                      </button>\r\n                    </td>\r\n                  </TableCell>\r\n                </Hidden>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        component=\"div\"\r\n        rowsPerPageOptions={[2, 4, 6]}\r\n        count={paginadorResponse.totalRecords}\r\n        rowsPerPage={paginadorRequest.cantidadElementos}\r\n        page={paginadorRequest.numeroPagina}\r\n        onChangePage={cambiarPagina}\r\n        onChangeRowsPerPage={cambiarCantidadRecords}\r\n        labelRowsPerPage=\"Instructores por pagina\"\r\n      />\r\n\r\n      <div style={style.paper}>\r\n        <form style={style.form}></form>\r\n        <Fab\r\n          style={style.submit}\r\n          variant=\"extended\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className={classes.margin}\r\n          onClick={pdfInstructor}\r\n        >\r\n          <GetAppIcon className={classes.extendedIcon} />\r\n          EXPORT PDF\r\n        </Fab>\r\n\r\n        <div className=\"App\">\r\n          <ExportToExcel apiData={list} fileName={fileName} />\r\n        </div>\r\n      </div>\r\n\r\n      <Modal isOpen={modalEditar}>\r\n        <ModalHeader color=\"#388e3c\">\r\n          <div>\r\n            <h3>Editar Instructor</h3>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            <label>ID</label>\r\n            <input\r\n              className=\"form-control\"\r\n              //readOnly\r\n              type=\"text\"\r\n              name=\"instructorId\"\r\n              value={\r\n                instructorSeleccionado && instructorSeleccionado.instructorId\r\n              }\r\n              //onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Nombre</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              value={instructorSeleccionado && instructorSeleccionado.nombre}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Apellidos</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"apellidos\"\r\n              value={instructorSeleccionado && instructorSeleccionado.apellidos}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Email</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={instructorSeleccionado && instructorSeleccionado.email}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Telefono</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"telefonoM\"\r\n              value={instructorSeleccionado && instructorSeleccionado.telefonoM}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>CentroAprendizaje</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"centroAprendizaje\"\r\n              value={\r\n                instructorSeleccionado && instructorSeleccionado.centroAprendizaje\r\n              }\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>CantAlumnos</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"cantAlumnos\"\r\n              value={\r\n                instructorSeleccionado && instructorSeleccionado.cantAlumnos\r\n              }\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Categoria</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"categoria\"\r\n              value={instructorSeleccionado && instructorSeleccionado.categoria}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Upline Master</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"uplineMaster\"\r\n              value={\r\n                instructorSeleccionado && instructorSeleccionado.uplineMaster\r\n              }\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>ClaveInstructor</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"claveInstructor\"\r\n              value={\r\n                instructorSeleccionado && instructorSeleccionado.claveInstructor\r\n              }\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>ClaveUpline</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"claveUpline\"\r\n              value={\r\n                instructorSeleccionado && instructorSeleccionado.claveUpline\r\n              }\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\" onClick={() => editInstructor()}>\r\n            Actualizar\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalEditar(false)}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalLista} style={{ width: \"100%\" }}>\r\n        <ModalHeader color=\"#388e3c\">\r\n          <div>\r\n            <h3>Lista Instructor - Alumno</h3>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            <label>ID Instructor</label>\r\n            <input\r\n              className=\"form-control\"\r\n              readOnly\r\n              type=\"text\"\r\n              name=\"instructorId\"\r\n              value={\r\n                instructorSeleccionado && instructorSeleccionado.instructorId\r\n              }\r\n              //onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Nombre Instructor</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              value={instructorSeleccionado && instructorSeleccionado.nombre}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n          </div>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"left\">AlumnoID</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Nombre Alumno</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Escuela Procedencia</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {lista.map(alumno => (\r\n                <TableRow >\r\n                <TableCell align=\"left\">{alumno.alumnoId}</TableCell>\r\n                <TableCell align=\"left\">{alumno.nombreAlumno}</TableCell>\r\n                <TableCell align=\"left\">{alumno.escuelaProcedencia}</TableCell>\r\n            </TableRow>\r\n              ))  }\r\n            </TableBody>\r\n          </Table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalLista(false)}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalEliminar}>\r\n        <ModalBody>\r\n          Estás Seguro que deseas eliminar el Instructor{\" \"}\r\n          {instructorSeleccionado && instructorSeleccionado.Nombre}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-danger\" onClick={() => eliminar()}>\r\n            Sí\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setModalEliminar(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginadorInstructor;\r\n","import HttpCliente from '../servicios/HttpCliente';\r\nimport axios from 'axios';\r\n\r\nconst instancia = axios.create();\r\ninstancia.CancelToken = axios.CancelToken;\r\ninstancia.isCancel = axios.isCancel;\r\n\r\nexport const guardarAlumno = async (alumno, imagen) => {\r\n    const endPointAlumno= '/alumno';\r\n    const promesaAlumno = HttpCliente.post(endPointAlumno, alumno);\r\n    \r\n    if(imagen){\r\n        const endPointImagen = '/documento';   \r\n        const promesaImagen = HttpCliente.post(endPointImagen, imagen);\r\n        return await Promise.all([promesaAlumno, promesaImagen].map(p => p.catch(e => e)));\r\n    }else{\r\n        return await Promise.all([promesaAlumno].map(p => p.catch(e => e)));\r\n    }\r\n};\r\n\r\nexport const listAlumnos = () => {\r\n  const endPointAlumno= '/alumno';\r\n  return  new  Promise((resolve, eject) => {\r\n      HttpCliente.get(endPointAlumno).then(response => {\r\n          resolve(response);\r\n      })\r\n  })\r\n}\r\n\r\nexport const paginacionAlumno = (paginador) => {\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.post('/alumno/report', paginador).then(response => {\r\n            resolve(response);\r\n        })\r\n    })\r\n}\r\n\r\nexport const editarAlumno = async (alumno) => {\r\n    const endPointAlumno= `/Alumno/${alumno.AlumnoId}`;\r\n    const promesaAlumno = HttpCliente.put(endPointAlumno, alumno);\r\n    return await Promise.all([promesaAlumno].map(p => p.catch(e => e)));\r\n}\r\n\r\n\r\n\r\nexport const editarAlumnoo = (alumno) => {\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.put(`/alumno/${alumno.alumnoId}`,alumno)\r\n        .then(response => {\r\n            resolve(response);\r\n        })\r\n        .catch(error => {\r\n            resolve(error.response);\r\n        })\r\n    })\r\n}\r\n\r\nexport const eliminarAlumno = async (alumno) => {\r\n    const endPointAlumno= `/Alumno/${alumno.AlumnoId}`;\r\n    const promesaAlumno = HttpCliente.delete(endPointAlumno, alumno);\r\n    return await Promise.all([promesaAlumno].map(p => p.catch(e => e)));\r\n}\r\n\r\nexport const pdfAlumno = (paginador) => {\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.get(window.open(\"http://localhost:5000/api/ExportarAlumnoDocumento\",\"_self\"), paginador).then(response => {\r\n            resolve(response);\r\n        })\r\n    })\r\n}","import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport style from '../Tool/Style';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport const ExportExcel = ({ apiData, fileName }) => {\r\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportToCSV = (apiData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <di style={style.paper}>\r\n      <Fab  \r\n          style={style.submit} \r\n          variant=\"extended\" \r\n          color=\"primary\" \r\n          aria-label=\"add\" \r\n          className={classes.margin} \r\n          onClick = {(e) => exportToCSV(apiData, fileName)}\r\n        >\r\n        <GetAppIcon className={classes.extendedIcon} />\r\n          Export Excel\r\n      </Fab>\r\n    </di>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableBody,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  Hidden,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport ControlTyping from \"../Tool/ControlTyping\";\r\nimport style from \"../Tool/Style\";\r\nimport axios from \"axios\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\nimport {\r\n  paginacionAlumno,\r\n  editarAlumno,\r\n  eliminarAlumno,\r\n  pdfAlumno,\r\n} from \"../../actions/AlumnoAction\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nimport { ExportExcel } from \"./ExportExcel\";\r\nvar list = [];\r\n\r\nconst PaginadorAlumno = () => {\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: \"#009900\",\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [data, setData] = useState([]);\r\n  const fileName = \"ListaAlumnos\";\r\n\r\n  const [textoBusquedaAlumno, setTextoBusquedaAlumno] = useState(\"\");\r\n  const typingBuscadorTexto = ControlTyping(textoBusquedaAlumno, 900);\r\n\r\n  const [paginadorRequest, setPaginadorRequest] = useState({\r\n    titulo: \"\",\r\n    numeroPagina: 0,\r\n    cantidadElementos: 5,\r\n  });\r\n\r\n  const [paginadorResponse, setPaginadorResponse] = useState({\r\n    listaRecords: [],\r\n    totalRecords: 0,\r\n    numeroPaginas: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const obtenerListaInstructor = async () => {\r\n      let nombreVariant = \"\";\r\n      let paginaVariant = paginadorRequest.numeroPagina + 1;\r\n\r\n      if (typingBuscadorTexto) {\r\n        nombreVariant = typingBuscadorTexto;\r\n        paginaVariant = 1;\r\n      }\r\n\r\n      const objetoPaginadorRequest = {\r\n        nombre: nombreVariant,\r\n        numeroPagina: paginaVariant,\r\n        cantidadElementos: paginadorRequest.cantidadElementos,\r\n      };\r\n\r\n      const response = await paginacionAlumno(objetoPaginadorRequest);\r\n      setPaginadorResponse(response.data);\r\n    };\r\n\r\n    obtenerListaInstructor();\r\n  }, [paginadorRequest, typingBuscadorTexto]);\r\n\r\n  list = paginadorResponse.listaRecords;\r\n  console.log(\"lista alumospaginador\");\r\n  console.log(list);\r\n\r\n  const cambiarPagina = (event, nuevaPagina) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      numeroPagina: parseInt(nuevaPagina),\r\n    }));\r\n  };\r\n\r\n  const cambiarCantidadRecords = (event) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      cantidadElementos: parseInt(event.target.value),\r\n      numeroPagina: 0,\r\n    }));\r\n  };\r\n\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n\r\n  const [alumnoSeleccionado, setAlumnoSeleccionado] = useState({\r\n    AlumnoId: \"\",\r\n    NombreAlumno: \"\",\r\n    ApellidosAlumno: \"\",\r\n    FechaNacimiento: \"\",\r\n    Edad: 0,\r\n    Telefono: 0,\r\n    Sexo: \"\",\r\n    EmailAlumno: \"\",\r\n    EscuelaProcedencia: \"\",\r\n    GradoEstudio: \"\",\r\n    InstructorId: \"\",\r\n    ExamenValorativo: \"\",\r\n    FechaExamen: \"\",\r\n    LugarExamen: \"\",\r\n    MetaInicio: 0,\r\n    CursoEspecial: \"\",\r\n    NivelInscrito: \"\",\r\n    Libro: 0,\r\n    FechaInscripcion: \"\",\r\n    TipoPago: \"\",\r\n    Precio: 0.0,\r\n  });\r\n\r\n  const resetearForm = () => {\r\n    setAlumnoSeleccionado({\r\n      AlumnoId: \"\",\r\n      NombreAlumno: \"\",\r\n      ApellidosAlumno: \"\",\r\n      FechaNacimiento: \"\",\r\n      Edad: 0,\r\n      Telefono: 0,\r\n      Sexo: \"\",\r\n      EmailAlumno: \"\",\r\n      EscuelaProcedencia: \"\",\r\n      GradoEstudio: \"\",\r\n      InstructorId: \"\",\r\n      ExamenValorativo: \"\",\r\n      FechaExamen: \"\",\r\n      LugarExamen: \"\",\r\n      MetaInicio: 0,\r\n      CursoEspecial: \"\",\r\n      NivelInscrito: \"\",\r\n      Libro: 0,\r\n      FechaInscripcion: \"\",\r\n      TipoPago: \"\",\r\n      Precio: 0.0,\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAlumnoSeleccionado((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const seleccionarAlumno = (alumno, caso) => {\r\n    setAlumnoSeleccionado(alumno);\r\n    caso === \"Editar\" ? setModalEditar(true) : setModalEliminar(true);\r\n  };\r\n\r\n  const editAlumno = () => {\r\n    alumnoSeleccionado.Edad = +alumnoSeleccionado.Edad;\r\n    alumnoSeleccionado.Telefono = +alumnoSeleccionado.Telefono;\r\n    alumnoSeleccionado.MetaInicio = +alumnoSeleccionado.MetaInicio;\r\n    alumnoSeleccionado.Libro = +alumnoSeleccionado.Libro;\r\n    alumnoSeleccionado.Precio = +alumnoSeleccionado.Precio;\r\n    editarAlumno(alumnoSeleccionado).then((respuestas) => {\r\n      const responseAlumno = respuestas[0];\r\n      let mensaje = \"\";\r\n      if (responseAlumno.status === 200) {\r\n        mensaje += \"Se actualizo exitosamente\";\r\n        resetearForm();\r\n        setModalEditar(false);\r\n      } else {\r\n        mensaje +=\r\n          \"Errores :\" + Object.keys(responseAlumno.response.data.errors);\r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const eliminar = () => {\r\n    eliminarAlumno(alumnoSeleccionado).then((respuestas) => {\r\n      const responseAlumno = respuestas[0];\r\n      let mensaje = \"\";\r\n      if (responseAlumno.status === 200) {\r\n        mensaje += \"Se elimino exitosamente\";\r\n        resetearForm();\r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n    setModalEliminar(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", width: \"100%\" }} className=\"container\">\r\n      <div style={style.paper}>\r\n        <h2>Lista de Alumnos</h2>\r\n      </div>\r\n      <Grid container style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\r\n        <Grid item xs={12} sm={4} md={24}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"textoBusquedaAlumno\"\r\n            variant=\"outlined\"\r\n            label=\"Buscar Alumno\"\r\n            onChange={(e) => setTextoBusquedaAlumno(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">AlumnoID</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Alumno</StyledTableCell>\r\n              <Hidden mdDown>\r\n                <StyledTableCell align=\"left\">Apellidos</StyledTableCell>\r\n\r\n                <StyledTableCell align=\"left\">Edad</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Telefono</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Sexo</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Email</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  Escuela Procedencia\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">Grado Estudios</StyledTableCell>\r\n                <StyledTableCell align=\"left\">InstructorID</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  Examen Valorativo\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">Fecha Examen</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Lugar Examen</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Meta Inicio</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Curso Especial</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Nivel Inscrito</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Libro</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  Fecha Inscripcion\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">Tipo Pago</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Precio</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Editar</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Eliminar</StyledTableCell>\r\n              </Hidden>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginadorResponse.listaRecords.map((alumno) => (\r\n              <TableRow key={(alumno.nombreAlumno, alumno.id)}>\r\n                <TableCell align=\"left\">{alumno.AlumnoId}</TableCell>\r\n                <TableCell align=\"left\">{alumno.NombreAlumno}</TableCell>\r\n\r\n                <Hidden mdDown>\r\n                  <TableCell align=\"left\">{alumno.ApellidosAlumno}</TableCell>\r\n\r\n                  <TableCell align=\"left\">{alumno.Edad}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.Telefono}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.Sexo}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.EmailAlumno}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {alumno.EscuelaProcedencia}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{alumno.GradoEstudio}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.InstructorId}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.ExamenValorativo}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.FechaExamen}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.LugarExamen}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.MetaInicio}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.CursoEspecial}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.NivelInscrito}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.Libro}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.FechaInscripcion}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.TipoPago}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.Precio}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => seleccionarAlumno(alumno, \"Editar\")}\r\n                      >\r\n                        Editar\r\n                      </button>\r\n                    </td>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => seleccionarAlumno(alumno, \"Eliminar\")}\r\n                      >\r\n                        Eliminar\r\n                      </button>\r\n                    </td>\r\n                  </TableCell>\r\n                </Hidden>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        component=\"div\"\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        count={paginadorResponse.totalRecords}\r\n        rowsPerPage={paginadorRequest.cantidadElementos}\r\n        page={paginadorRequest.numeroPagina}\r\n        onChangePage={cambiarPagina}\r\n        onChangeRowsPerPage={cambiarCantidadRecords}\r\n        labelRowsPerPage=\"Alumnos por pagina\"\r\n      />\r\n\r\n      <div style={style.paper}>\r\n        <form style={style.form}></form>\r\n        <Fab\r\n          style={style.submit}\r\n          variant=\"extended\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className={classes.margin}\r\n          onClick={pdfAlumno}\r\n        >\r\n          <GetAppIcon className={classes.extendedIcon} />\r\n          EXPORT PDF\r\n        </Fab>\r\n\r\n        <div className=\"App\">\r\n          <ExportExcel apiData={list} fileName={fileName} />\r\n        </div>\r\n      </div>\r\n\r\n      <Modal isOpen={modalEditar}>\r\n        <ModalHeader color=\"#388e3c\">\r\n          <div>\r\n            <h3>Editar Alumno</h3>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            <label>ID</label>\r\n            <input\r\n              className=\"form-control\"\r\n              readOnly\r\n              type=\"text\"\r\n              name=\"AlumnoId\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.AlumnoId}\r\n              //onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Nombre</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"NombreAlumno\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.NombreAlumno}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Apellidos</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"ApellidosAlumno\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.ApellidosAlumno}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Fecha Nacimiento</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"FechaNacimiento\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.FechaNacimiento}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Edad</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Edad\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.Edad}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Telefono</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Telefono\"\r\n              value={\r\n                alumnoSeleccionado && parseInt(alumnoSeleccionado.Telefono)\r\n              }\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Sexo</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Sexo\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.Sexo}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Email</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"EmailAlumno\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.EmailAlumno}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Escuela Procedencia</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"EscuelaProcedencia\"\r\n              value={\r\n                alumnoSeleccionado && alumnoSeleccionado.EscuelaProcedencia\r\n              }\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Grado Estudios</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"GradoEstudio\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.GradoEstudio}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Instructor Id</label>\r\n            <input\r\n              className=\"form-control\"\r\n              readOnly\r\n              type=\"text\"\r\n              name=\"InstructorId\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.InstructorId}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Examen Valorativo</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"ExamenValorativo\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.ExamenValorativo}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Fecha Examen</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"FechaExamen\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.FechaExamen}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Lugar Examen</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"LugarExamen\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.LugarExamen}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Meta Inicio</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"MetaInicio\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.MetaInicio}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Curso Especial</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"CursoEspecial\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.CursoEspecial}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Nivel Inscrito</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"NivelInscrito\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.NivelInscrito}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Libro</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Libro\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.Libro}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Fecha Inscripcion</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"FechaInscripcion\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.FechaInscripcion}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Tipo Pago</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"TipoPago\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.TipoPago}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Precio</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Precio\"\r\n              value={alumnoSeleccionado && alumnoSeleccionado.Precio}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\" onClick={() => editAlumno()}>\r\n            Actualizar\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalEditar(false)}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalEliminar}>\r\n        <ModalBody>\r\n          Estás Seguro que deseas eliminar el Alumno{\" \"}\r\n          {alumnoSeleccionado && alumnoSeleccionado.NombreAlumno}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-danger\" onClick={() => eliminar()}>\r\n            Sí\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setModalEliminar(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginadorAlumno;\r\n","import { Button, Container, Grid, TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport style from '../Tool/Style';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {guardarAlumno} from '../../actions/AlumnoAction';\r\nimport { useStateValue } from '../../contexto/store';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction Copyright() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © YouLEAD  '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\nsubmit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n},\r\n}));\r\n\r\nconst NuevoAlumno = () => {\r\n    const classes = useStyles();\r\n    const [{sesionUsuario}, dispatch]  = useStateValue();\r\n    \r\n    const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\r\n    const [fechaSeleccionadaIngreso, setFechaSeleccionadaIngreso] = useState(new Date());\r\n    const [fechaSeleccionadaExamen, setFechaSeleccionadaExamen] = useState(new Date());\r\n\r\n    const currencies = [\r\n        {\r\n          value: 'F',\r\n          label: 'Femenino',\r\n        },\r\n        {\r\n          value: 'M',\r\n          label: 'Masculino',\r\n        },\r\n    ];\r\n    const currencies1 = [\r\n        {\r\n          value: 'Si',\r\n          label: 'Si',\r\n        },\r\n        {\r\n          value: 'No',\r\n          label: 'No',\r\n        },\r\n    ];\r\n    const currencies2 = [\r\n        {\r\n          value: 'Mensual',\r\n          label: 'Mensual',\r\n        },\r\n        {\r\n          value: 'Semanal',\r\n          label: 'Semanal',\r\n        },\r\n    ];\r\n\r\n    const [alumno, setAlumno] = useState({\r\n        NombreAlumno : '',\r\n        ApellidosAlumno : '',\r\n        FechaNacimiento : '',\r\n        Edad : 0,\r\n        Sexo : '',\r\n        Telefono : 0,\r\n        EmailAlumno : '',\r\n        EscuelaProcedencia : '',\r\n        GradoEstudio : '',\r\n        InstructorId : '',\r\n        ExamenValorativo : '',\r\n        FechaExamen : '',\r\n        LugarExamen : '',\r\n        MetaInicio : 0,\r\n        CursoEspecial : '',\r\n        NivelInscrito : '',\r\n        Libro : 0,\r\n        FechaInscripcion : '',\r\n        TipoPago : '',\r\n        Precio : 0\r\n    })\r\n\r\n    const resetearForm = () => {\r\n        setFechaSeleccionada(new Date());\r\n        setFechaSeleccionadaIngreso(new Date());\r\n        setFechaSeleccionadaExamen(new Date());\r\n        setAlumno({\r\n            NombreAlumno : '',\r\n            ApellidosAlumno : '',\r\n            FechaNacimiento : '',\r\n            Edad : 0,\r\n            Sexo : '',\r\n            Telefono : 0,\r\n            EmailAlumno : '',\r\n            EscuelaProcedencia : '',\r\n            GradoEstudio : '',\r\n            InstructorId : '',\r\n            ExamenValorativo : '',\r\n            FechaExamen : '',\r\n            LugarExamen : '',\r\n            MetaInicio : 0,\r\n            CursoEspecial : '',\r\n            NivelInscrito : '',\r\n            Libro : 0,\r\n            FechaInscripcion : '',\r\n            TipoPago : '',\r\n            Precio : 0\r\n        })\r\n    }\r\n\r\n    const ingresarValoresMemoria = e => {\r\n        const {name,value} = e.target;\r\n        setAlumno( (anterior) => ({\r\n            ...anterior,\r\n            [name]:value\r\n        }));\r\n    }\r\n\r\n    const guardarAlumnoBoton = e => {\r\n        e.preventDefault();\r\n        //const alumnoId = uuidv4();\r\n\r\n        const objetoAlumno = {\r\n            NombreAlumno : alumno.NombreAlumno,\r\n            ApellidosAlumno : alumno.ApellidosAlumno,\r\n            FechaNacimiento : fechaSeleccionada,\r\n            Edad : parseInt(alumno.Edad),\r\n            Sexo : alumno.Sexo,\r\n            Telefono : parseInt(alumno.Telefono),\r\n            EmailAlumno : alumno.EmailAlumno,\r\n            EscuelaProcedencia : alumno.EscuelaProcedencia,\r\n            GradoEstudio : alumno.GradoEstudio,\r\n            InstructorId : parseInt(alumno.InstructorId),\r\n            ExamenValorativo : alumno.ExamenValorativo,\r\n            FechaExamen : fechaSeleccionadaExamen,\r\n            LugarExamen : alumno.LugarExamen,\r\n            MetaInicio : parseInt(alumno.MetaInicio),\r\n            CursoEspecial : alumno.CursoEspecial,\r\n            NivelInscrito : alumno.NivelInscrito,\r\n            Libro : parseInt(alumno.Libro),\r\n            FechaInscripcion : fechaSeleccionadaIngreso,\r\n            TipoPago : alumno.TipoPago,\r\n            Precio : parseInt(alumno.Precio),\r\n            //alumnoId :parseInt(alumnoId)\r\n        };\r\n\r\n        guardarAlumno(objetoAlumno).then(respuestas => {\r\n            const responseAlumno = respuestas[0];\r\n            let mensaje = \"\";\r\n\r\n            if(responseAlumno.status === 200){\r\n                mensaje += \"Se guardo exitosamente el nuevo alumno\"\r\n                resetearForm();\r\n            }else{\r\n                mensaje += \"Errores :\" + Object.keys(responseAlumno.response.data.errors);\r\n            }\r\n\r\n            dispatch({\r\n                type : \"OPEN_SNACKBAR\",\r\n                openMensaje : {\r\n                    open : true,\r\n                    mensaje : mensaje\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={style.paper} className=\"container\">\r\n            <Card className={classes.root} style={{ background: \"#009900\" }}>\r\n                <CardContent >\r\n                    <div style={style.paper} className=\"container\">\r\n                    <h2>Cédula de registro</h2>\r\n                        <div className=\"flex-row\"></div>\r\n                        <div className=\"flex-large\">\r\n\r\n                            <Box mt={5}>\r\n                                <h3>Datos generales del alumno(a)</h3>\r\n                            </Box>\r\n                            \r\n                            <div style={style.paper}>\r\n                                <form style={style.form}>\r\n                                    <Box mt={2}>\r\n                                        <Grid container spacing={2} >\r\n                                            <Grid item xs={12} md={4}>\r\n                                                <TextField \r\n                                                    name=\"InstructorId\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    label=\"ID del instructor encargado\"\r\n                                                    value = {alumno.InstructorId}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n\r\n                                    <Box mt={5}>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={12} md={4}>\r\n                                                <TextField \r\n                                                    name=\"NombreAlumno\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    label=\"Ingrese Nombre(s)\"\r\n                                                    value = {alumno.NombreAlumno}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={4}>\r\n                                                <TextField \r\n                                                    name=\"ApellidosAlumno\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    label=\"Apellidos\"\r\n                                                    value = {alumno.ApellidosAlumno}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={4}>\r\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                    <KeyboardDatePicker\r\n                                                        value={fechaSeleccionada}\r\n                                                        onChange={setFechaSeleccionada}\r\n                                                        //margin=\"normal\"\r\n                                                        id=\"fecha-nacimiento-id\"\r\n                                                        label=\"Ingrese su Fecha Nacimiento\"\r\n                                                        format=\"dd/MM/yyyy\"\r\n                                                        fullWidth\r\n                                                        KeyboardButtonProps = {{\r\n                                                            \"aria-label\" : \"change date\"\r\n                                                        }}\r\n                                                    />\r\n                                                </MuiPickersUtilsProvider>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={1}>\r\n                                                <TextField \r\n                                                    name=\"Edad\"\r\n                                                    variant=\"outlined\"\r\n                                                    //fullWidth\r\n                                                    label=\"Edad\"\r\n                                                    value = {alumno.Edad}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={2}>\r\n                                                <TextField\r\n                                                    name=\"Sexo\"\r\n                                                    variant=\"outlined\"\r\n                                                    select\r\n                                                    fullWidth\r\n                                                    label=\"Sexo\"\r\n                                                    value = {alumno.Sexo}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                    >\r\n                                                    {currencies.map((option) => (\r\n                                                        <MenuItem key={option.value} value={option.value}>\r\n                                                        {option.label}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={3}>\r\n                                                <TextField \r\n                                                    name=\"Telefono\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    label=\"Telefono (10 digitos)\"\r\n                                                    value = {alumno.Telefono}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={6}>\r\n                                                <TextField \r\n                                                    name=\"EmailAlumno\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    label=\"Email\"\r\n                                                    value = {alumno.EmailAlumno}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={7}>\r\n                                                <TextField \r\n                                                    name=\"EscuelaProcedencia\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    label=\"Escuela de Procedencia\"\r\n                                                    value = {alumno.EscuelaProcedencia}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={5}>\r\n                                                <TextField \r\n                                                    name=\"GradoEstudio\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    label=\"Grado de Estudio\"\r\n                                                    value = {alumno.GradoEstudio}\r\n                                                    onChange={ingresarValoresMemoria}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                \r\n                                \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex-large\">\r\n                            <Box mt={5}>\r\n                                <h2>Datos de ingreso al curso</h2>\r\n                            </Box>\r\n                            \r\n                            <div style={style.paper}>\r\n                                <form style={style.form}></form>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <TextField\r\n                                            name=\"ExamenValorativo\"\r\n                                            variant=\"outlined\"\r\n                                            select\r\n                                            fullWidth\r\n                                            label=\"Examen valorativo\"\r\n                                            value = {alumno.ExamenValorativo}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                            >\r\n                                            {currencies1.map((option) => (\r\n                                                <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <TextField \r\n                                            name=\"LugarExamen\"\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Lugar donde presento el Examen\"\r\n                                            value = {alumno.LugarExamen}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                            <KeyboardDatePicker\r\n                                                value={fechaSeleccionadaExamen}\r\n                                                onChange={setFechaSeleccionadaExamen}\r\n                                                //margin=\"normal\"\r\n                                                id=\"fecha-examen-id\"\r\n                                                label=\"Fecha de Examen Valorativo\"\r\n                                                format=\"dd/MM/yyyy\"\r\n                                                fullWidth\r\n                                                KeyboardButtonProps = {{\r\n                                                    \"aria-label\" : \"change date\"\r\n                                                }}\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={12} md={2}>\r\n                                        <TextField \r\n                                            name=\"MetaInicio\"\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Meta de Inicio\"\r\n                                            value = {alumno.MetaInicio}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <TextField\r\n                                            name=\"CursoEspecial\"\r\n                                            variant=\"outlined\"\r\n                                            select\r\n                                            fullWidth\r\n                                            label=\"Curso Especial\"\r\n                                            value = {alumno.CursoEspecial}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                            >\r\n                                            {currencies1.map((option) => (\r\n                                                <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <TextField \r\n                                            name=\"NivelInscrito\"\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Nivel de ingles\"\r\n                                            value = {alumno.NivelInscrito}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={4}>\r\n                                        <TextField \r\n                                            name=\"Libro\"\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Número de Libro\"\r\n                                            value = {alumno.Libro}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={4}>\r\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                            <KeyboardDatePicker\r\n                                                value={fechaSeleccionadaIngreso}\r\n                                                onChange={setFechaSeleccionadaIngreso}\r\n                                                //margin=\"normal\"\r\n                                                id=\"fecha-ingreso-id\"\r\n                                                label=\"Fecha de ingreso a Curso\"\r\n                                                format=\"dd/MM/yyyy\"\r\n                                                fullWidth\r\n                                                KeyboardButtonProps = {{\r\n                                                    \"aria-label\" : \"change date\"\r\n                                                }}\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={4}>\r\n                                        <TextField\r\n                                            name=\"TipoPago\"\r\n                                            variant=\"outlined\"\r\n                                            select\r\n                                            fullWidth\r\n                                            label=\"Tipo de pago\"\r\n                                            value = {alumno.TipoPago}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                            >\r\n                                            {currencies2.map((option) => (\r\n                                                <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={4}>\r\n                                        <TextField \r\n                                            name=\"Precio\"\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            label=\"Ingrese Precio a Pagar\"\r\n                                            value = {alumno.Precio}\r\n                                            onChange={ingresarValoresMemoria}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container justify=\"center\">\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Box mt={5}>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                fullWidth\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                size=\"large\"\r\n                                                startIcon={<SaveIcon />}\r\n                                                style={style.submit}\r\n                                                onClick = {guardarAlumnoBoton}\r\n                                            >\r\n                                                Guardar Alumno\r\n                                            </Button>\r\n                                        </Box>\r\n                                        \r\n                                    </Grid>  \r\n                                </Grid>\r\n                                <Box mt={10}>\r\n                                    <Copyright />\r\n                                </Box>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NuevoAlumno;","import React, { useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport descarga from '../../assets/img/YouLEAD.jpg';\r\nimport {loginUsuario} from '../../actions/UsuarioActions';\r\nimport { useStateValue } from '../../contexto/store';\r\nimport { Toolbar, IconButton, Typography, makeStyles, Button, Avatar, Drawer, List, ListItem, ListItemText,Divider} from \"@material-ui/core\";\r\nimport style from '../Tool/Style';\r\n\r\nfunction Copyright() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © YouLEAD  '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '50vh',\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundPosition: 'center',\r\n      \r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignInSide(props) {\r\n  const classes = useStyles();\r\n\r\n  const [{usuarioSesion}, dispatch]  = useStateValue();\r\n\r\n    const [usuario, setUsuario] = useState({\r\n        Email : '',\r\n        Password : ''\r\n    })\r\n\r\n    const ingresarValoresMemoria = e => {\r\n        const {name,value} = e.target;\r\n        setUsuario(anterior => ({\r\n            ...anterior,\r\n            [name] : value\r\n        }))\r\n    }\r\n\r\n    const loginUsuarioBoton = e => {\r\n        e.preventDefault();\r\n        loginUsuario(usuario, dispatch).then(response => {\r\n            console.log('response.data.token', response.data.token);\r\n            if(response.status === 200) {\r\n                window.localStorage.setItem('token_seguridad', response.data.token);\r\n                props.history.push(\"/\");\r\n            }else{\r\n                dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : \"Las credenciales del usuario son incorrectas\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n  return (\r\n    \r\n    <Grid container component=\"main\" >\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={2} md={7} className={classes.image} >\r\n        <img src={descarga} style={{height:'95vh'}} />\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar >\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Welcome\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField name=\"Email\" value={usuario.Email} onChange={ingresarValoresMemoria} variant=\"outlined\" label=\"Email\" fullWidth margin=\"normal\"/>\r\n            <TextField name=\"Password\" value={usuario.Password} onChange={ingresarValoresMemoria} variant=\"outlined\" type=\"password\"  label=\"Password\" fullWidth margin=\"normal\" />\r\n            \r\n            <Button type=\"submit\" onClick={loginUsuarioBoton} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                Sign In\r\n            </Button>\r\n\r\n            <Box mt={30}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport style from '../Tool/Style';\r\nimport { Container, Avatar, Typography, TextField, Button } from '@material-ui/core';\r\nimport descarga from '../../assets/img/YouLEAD.jpg';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n           <div style={style.paper}>\r\n               <div>\r\n                    <Typography component=\"div\" variant=\"h5\"  style={{  height: '35vh' }}>\r\n                        <img src={descarga} style={{  height: '75vh' }}/>\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport {TableContainer, Paper, TableHead, TableBody, Table, TableRow, TableCell, TablePagination, Hidden, Grid, TextField, Fab} from \"@material-ui/core\";\r\nimport ControlTyping from \"../Tool/ControlTyping\";\r\nimport style from '../Tool/Style';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { useStateValue } from '../../contexto/store';\r\nimport { paginacionAlumno , editarAlumno, eliminarAlumno, pdfAlumno } from '../../actions/AlumnoAction';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport {ExportExcel} from './ExportExcel'\r\nvar list = [];\r\n\r\nconst PaginadorLista = () => {\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: \"#009900\",\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [{sesionUsuario}, dispatch]  = useStateValue();\r\n  const [data, setData] = useState([]);\r\n  const fileName = \"ListaAlumnos\";\r\n\r\n  const [textoBusquedaAlumno, setTextoBusquedaAlumno] = useState(\"\");\r\n  const typingBuscadorTexto = ControlTyping(textoBusquedaAlumno, 900);\r\n\r\n  const [paginadorRequest, setPaginadorRequest] = useState({\r\n    titulo: \"\",\r\n    numeroPagina: 0,\r\n    cantidadElementos: 5,\r\n  });\r\n\r\n  const [paginadorResponse, setPaginadorResponse] = useState({\r\n    listaRecords: [],\r\n    totalRecords: 0,\r\n    numeroPaginas: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    const obtenerListaInstructor = async () => {\r\n\r\n      let nombreVariant = \"\";\r\n      let paginaVariant = paginadorRequest.numeroPagina + 1;\r\n\r\n      if(typingBuscadorTexto){\r\n        nombreVariant = typingBuscadorTexto;\r\n        paginaVariant = 1\r\n      }\r\n\r\n      const objetoPaginadorRequest = {\r\n        nombre: nombreVariant,\r\n        numeroPagina: paginaVariant,\r\n        cantidadElementos: paginadorRequest.cantidadElementos,\r\n      };\r\n\r\n      const response = await paginacionAlumno(objetoPaginadorRequest);\r\n      setPaginadorResponse(response.data);\r\n    };\r\n\r\n    obtenerListaInstructor();\r\n  }, [paginadorRequest, typingBuscadorTexto]);\r\n\r\n  list = paginadorResponse.listaRecords;\r\n    console.log('lista alumoslista');\r\n    console.log(list);\r\n\r\n  const cambiarPagina = (event, nuevaPagina) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      numeroPagina: parseInt(nuevaPagina),\r\n    }));\r\n  };\r\n  \r\n  const cambiarCantidadRecords = (event) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      cantidadElementos: parseInt(event.target.value),\r\n      numeroPagina: 0,\r\n    }));\r\n  };\r\n\r\n  return (\r\n      <div style={{padding:\"10px\", width:\"100%\"}} className=\"container\">\r\n        <div style={style.paper}>\r\n        <h2>Lista de Alumnos</h2>\r\n        </div>\r\n        <Grid container style={{paddingTop:\"20px\", paddingBottom:\"20px\"}}>\r\n          <Grid item xs={12} sm={4} md={24}>\r\n              <TextField \r\n                fullWidth\r\n                name=\"textoBusquedaAlumno\"\r\n                variant=\"outlined\"\r\n                label=\"Buscar Alumno\"\r\n                onChange = {e => setTextoBusquedaAlumno(e.target.value)}\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"left\">AlumnoID</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Alumno</StyledTableCell>\r\n                <Hidden mdDown>\r\n                  <StyledTableCell align=\"left\">Apellidos</StyledTableCell>\r\n                  \r\n                  <StyledTableCell align=\"left\">Edad</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Telefono</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Sexo</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Email</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Escuela Procedencia</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Grado Estudios</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">InstructorID</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Examen Valorativo</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Fecha Examen</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Lugar Examen</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Meta Inicio</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Curso Especial</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Nivel Inscrito</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Libro</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Fecha Inscripcion</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Tipo Pago</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Precio</StyledTableCell>\r\n                </Hidden>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {paginadorResponse.listaRecords.map((alumno) => (\r\n                \r\n                <TableRow key={alumno.nombreAlumno, alumno.id}>\r\n                  <TableCell align=\"left\">{alumno.AlumnoId}</TableCell>\r\n                  <TableCell align=\"left\">{alumno.NombreAlumno}</TableCell>\r\n\r\n                  <Hidden mdDown>\r\n                      <TableCell align=\"left\">{alumno.ApellidosAlumno}</TableCell>\r\n                      \r\n                      <TableCell align=\"left\">{alumno.Edad}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.Telefono}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.Sexo}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.EmailAlumno}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.EscuelaProcedencia}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.GradoEstudio}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.InstructorId}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.ExamenValorativo}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.FechaExamen}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.LugarExamen}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.MetaInicio}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.CursoEspecial}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.NivelInscrito}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.Libro}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.FechaInscripcion}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.TipoPago}</TableCell>\r\n                      <TableCell align=\"left\">{alumno.Precio}</TableCell>                    \r\n                  </Hidden>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          component=\"div\"\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          count={paginadorResponse.totalRecords}\r\n          rowsPerPage={paginadorRequest.cantidadElementos}\r\n          page={paginadorRequest.numeroPagina}\r\n          onChangePage={cambiarPagina}\r\n          onChangeRowsPerPage={cambiarCantidadRecords}\r\n          labelRowsPerPage=\"Alumnos por pagina\"\r\n        />\r\n\r\n        <div style={style.paper}>\r\n          <form style={style.form}></form>\r\n          <Fab  \r\n              style={style.submit} \r\n              variant=\"extended\" \r\n              color=\"primary\" \r\n              aria-label=\"add\" \r\n              className={classes.margin} \r\n              onClick = {pdfAlumno}\r\n              >\r\n              <GetAppIcon className={classes.extendedIcon} />\r\n              PDF\r\n          </Fab>\r\n          <div className=\"App\">\r\n              <ExportExcel apiData={list} fileName={fileName} />\r\n            </div>\r\n        </div>   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginadorLista;\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ThemeProvider as MuithemeProvider} from '@material-ui/core/styles';\nimport theme from './theme/theme';\nimport RegistrarUsuario from './componentes/seguridad/RegistrarUsuario';\nimport Login from './componentes/seguridad/Login';\nimport PerfilUsuario from './componentes/seguridad/PerfilUsuario';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport { Grid, Snackbar } from '@material-ui/core';\nimport AppNavbar from './componentes/navegacion/AppNavbar';\nimport { useStateValue } from './contexto/store';\nimport { obtenerUsuarioActual } from './actions/UsuarioActions';\nimport RutaSegura from './componentes/navegacion/RutaSegura';\nimport NuevoInstructor from './componentes/instructores/NuevoInstructor';\nimport PaginadorInstructor from './componentes/instructores/PaginadorInstructor';\nimport PaginadorAlumno from './componentes/alumnos/PaginadorAlumno';\nimport NuevoAlumno from './componentes/alumnos/NuevoAlumno';\nimport SignInSide from './componentes/seguridad/LoginNya';\nimport Home from './componentes/seguridad/Home';\nimport PaginadorLista from './componentes/alumnos/PaginadorLista';\nimport LoginNya from './componentes/seguridad/LoginNya';\n\nfunction App() {\n  const [{sesionUsuario, openSnackbar }, dispatch] = useStateValue();\n\n  const [{iniciaApp}, setIniciaApp] = useState(false);\n\n  useEffect(() => {\n    if (!iniciaApp) {\n      obtenerUsuarioActual(dispatch)\n        .then((response) => {\n          setIniciaApp(true);\n        })\n        .catch((error) => {\n          setIniciaApp(true);\n        });\n    }\n  }, [iniciaApp]);\n\n  return iniciaApp === false ? null : (\n    <React.Fragment>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={openSnackbar ? openSnackbar.open : false}\n        autoHideDuration={3000}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={\n          <span id=\"message-id\">\n            {openSnackbar ? openSnackbar.mensaje : \"\"}\n          </span>\n        }\n        onClose={() =>\n          dispatch({\n            type: \"OPEN_SNACKBAR\",\n            openMensaje: {\n              open: false,\n              mensaje: \"\",\n            },\n          })\n        }\n      ></Snackbar>\n      <Router>\n        <MuithemeProvider theme={theme}>\n          <AppNavbar />\n          <Grid container>\n            <Switch>\n\n            <Route exact path=\"/auth/login\" component={SignInSide} />\n              <Route\n                exact\n                path=\"/auth/registrar\"\n                component={RegistrarUsuario}\n              />\n              \n              <RutaSegura \n                exact\n                path = \"/auth/perfil\"\n                component = {PerfilUsuario}\n              />\n              \n              <RutaSegura \n                exact\n                path=\"/\"\n                component={PerfilUsuario}\n              />\n\n              <Route \n                exact\n                path=\"/Home\"\n                component={Home}\n              />\n\n              <Route\n                exact\n                path=\"/instructor/nuevo\"\n                component={NuevoInstructor}\n              />\n\n              <Route\n                exact\n                path=\"/instructor/paginador\"\n                component={PaginadorInstructor}\n              />\n\n              <Route\n                exact\n                path=\"/alumno/nuevo\"\n                component={NuevoAlumno}\n              />\n\n              <Route\n                exact\n                path=\"/alumno/paginador\"\n                component={PaginadorAlumno}\n              />\n\n              <Route\n                exact\n                path=\"/alumno/listaAlumno\"\n                component={PaginadorLista}\n              />\n\n            </Switch>\n          </Grid>\n        </MuithemeProvider>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","export const initialState = {};","export const initialState = {\r\n    usuario: {\r\n      nombreCompleto: \"\",\r\n      email: \"\",\r\n      userName: \"\",\r\n      foto: \"\",\r\n    },\r\n    autenticado: false,\r\n  };\r\n  \r\n  const sesionUsuarioReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"INICIAR_SESION\":\r\n        return {\r\n          ...state,\r\n          usuario: action.sesion,\r\n          autenticado: action.autenticado,\r\n        };\r\n      case \"SALIR_SESION\":\r\n          return {\r\n              ...state,\r\n              usuario: action.nuevoUsuario,\r\n              autenticado : action.autenticado\r\n          };\r\n      case \"ACTUALIZAR_USUARIO\" :\r\n          return {\r\n              ...state,\r\n              usuario : action.nuevoUsuario,\r\n              autenticado : action.autenticado\r\n          }\r\n      default : return state;\r\n    }\r\n  };\r\n  \r\n  export default sesionUsuarioReducer;\r\n  ","const initialState  = {\r\n    open : false,\r\n    mensaje: \"\"\r\n};\r\n\r\nconst openSnackbarReducer = (state = initialState, action) => {\r\n    console.log(\"action\", action);\r\n\r\n    switch(action.type) {\r\n        case \"OPEN_SNACKBAR\" :\r\n            return {\r\n                ...state,\r\n                open : action.openMensaje.open,\r\n                mensaje : action.openMensaje.mensaje\r\n            };\r\n        default : \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default openSnackbarReducer;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport {initialState} from './contexto/initialState';\nimport {StateProvider} from './contexto/store';\nimport {mainReducer} from './contexto/reducers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={mainReducer}>\n        <App />\n    </StateProvider>\n    \n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","import sesionUsuarioReducer from './sesionUsuarioReducer';\r\nimport openSnackbarReducer from './openSnackbarReducer';\r\n\r\nexport const mainReducer = ({sesionUsuario, openSnackbar}, action) => {\r\n    return {\r\n        sesionUsuario : sesionUsuarioReducer(sesionUsuario, action),\r\n        openSnackbar :  openSnackbarReducer(openSnackbar, action)\r\n    }\r\n}"],"sourceRoot":""}